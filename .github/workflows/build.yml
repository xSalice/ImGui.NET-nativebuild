name: CI

# Controls when the workflow will run
on:
  create:

  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      ReleaseType:
        description: 'Release or Debug'
        required: true
        default: 'Release'

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
          - os: ubuntu-latest
          - os: windows-latest
            architecture: x64
          - os: windows-latest
            architecture: x86
          - os: windows-latest
            architecture: ARM64

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Patch ImGui Files
        shell: bash
        env:
          GITHUB_OS: ${{ matrix.os }}
        run: |
          if [ ! -f "cimgui/imgui/backends/imgui_impl_win32.h" ]; then
            echo "Error: imgui_impl_win32.h not found at expected path"
            ls -R cimgui/imgui/
            exit 1
          fi
          
          if [ "$GITHUB_OS" == "windows-latest" ]; then
            echo "Debug: Starting PowerShell file modification"
            
            # Patch imgui_impl_win32.h
            powershell -Command '
              $file = "cimgui/imgui/backends/imgui_impl_win32.h"
              $content = Get-Content $file
              
              # Create new content with windows.h include after pragma once
              $modified = $content | ForEach-Object {
                if ($_ -match "#pragma once") {
                  "$_", "#include <windows.h>      // For Windows APIs"
                }
                elseif ($_ -notmatch "^\s*#if 0\s*$" -and $_ -notmatch "^\s*#endif\s*$") {
                  if ($_ -match "^extern\s+") {
                    $_ -replace "^extern\s+",""
                  } else {
                    $_
                  }
                }
              }
              
              $modified | Set-Content $file
              Write-Host "Debug: Modifications complete for .h file"
            '

            # Patch imgui_impl_win32.cpp
            powershell -Command '
              $file = "cimgui/imgui/backends/imgui_impl_win32.cpp"
              $content = Get-Content $file | Where-Object {
                -not ($_ -match "extern IMGUI_IMPL_API LRESULT ImGui_ImplWin32_WndProcHandler.*" -or
                      $_ -match "extern IMGUI_IMPL_API LRESULT ImGui_ImplWin32_WndProcHandlerEx.*")
              }
              $content | Set-Content $file
              Write-Host "Debug: Modifications complete for .cpp file"
            '
            
            echo "Debug: File content after modification (.h):"
            cat cimgui/imgui/backends/imgui_impl_win32.h
            echo "Debug: File content after modification (.cpp):"
            cat cimgui/imgui/backends/imgui_impl_win32.cpp
          fi

      - name: Setup .NET
        if: matrix.os == 'windows-latest'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build source package
        if: matrix.os == 'windows-latest' && matrix.architecture == 'x64'
        run: dotnet pack -c Release ImGui.NET.SourceBuild.csproj
        shell: bash

      - name: Upload source package
        uses: actions/upload-artifact@v4
        if: matrix.os == 'windows-latest' && matrix.architecture == 'x64'
        with:
          name: win-x64-source
          path: bin\Packages\Release\*.nupkg

      - name: Publish untagged source package to MyGet
        if: matrix.os == 'windows-latest' && github.ref == 'refs/heads/master' && matrix.architecture == 'x64'
        run: dotnet nuget push bin\Packages\Release\*.nupkg -s https://www.myget.org/F/mellinoe/api/v3/index.json --api-key ${{secrets.MYGET_KEY}}
        # error can be fixed afterwards and job can be re-triggered
        continue-on-error: true

      - name: Publish tagged source package release to nuget.org
        if: matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/') && matrix.architecture == 'x64'
        run: dotnet nuget push bin\Packages\Release\*.nupkg -s https://api.nuget.org/v3/index.json --api-key ${{secrets.NUGET_KEY}}
        # error can be fixed afterwards and job can be re-triggered
        continue-on-error: true

      - name: Build ${{ github.event.inputs.ReleaseType || 'Release' }}
        run:  |
              if [ "$RUNNER_OS" == "Windows" ]; then
                ./ci-build.cmd ${{ github.event.inputs.ReleaseType || 'Release' }} ${{ matrix.architecture }}
              else
                ./ci-build.sh ${{ github.event.inputs.ReleaseType || 'Release' }}
              fi
        shell: bash

      - name: Upload win-${{ matrix.architecture }} ${{ github.event.inputs.ReleaseType || 'Release' }}
        uses: actions/upload-artifact@v4
        if: matrix.os == 'windows-latest'
        with:
          name: win-${{ matrix.architecture }}
          path: cimgui\build\${{ matrix.architecture }}\${{ github.event.inputs.ReleaseType || 'Release' }}\*

      - name: Upload ${{ matrix.os }} ${{ github.event.inputs.ReleaseType || 'Release' }}
        uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        with:
          name: ${{ matrix.os }}-x64
          path: cimgui/build/${{ github.event.inputs.ReleaseType || 'Release' }}/*

      - name: Upload Json Files
        uses: actions/upload-artifact@v4
        if: matrix.os == 'windows-latest' && matrix.architecture == 'x64'
        with:
          name: JsonFiles
          path: cimgui\generator\output\*.json

  CreateReleaseOnTagCreate:
    runs-on: ubuntu-latest
    needs: [Build]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: Rename win-x64 and win-x86 artifacts
        run: |
          mv win-x64/cimgui.dll win-x64/cimgui.win-x64.dll
          mv win-x86/cimgui.dll win-x86/cimgui.win-x86.dll
          mv win-ARM64/cimgui.dll win-ARM64/cimgui.win-arm64.dll

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            win-x64/cimgui.win-x64.dll
            win-x86/cimgui.win-x86.dll
            win-ARM64/cimgui.win-arm64.dll
            JsonFiles/*
            ubuntu-latest-x64/cimgui.so
            macos-latest-x64/cimgui.dylib
